- name: Download boot image
  ansible.builtin.get_url:
    url: "{{ iso_url }}"
    dest: "{{ role_path }}/files/data/iso/{{ iso_url | basename }}"
    checksum: "{{ iso_checksum }}"
    mode: 0644
    timeout: 60
  register: iso

- name: Extract boot image
  ansible.builtin.command:
    cmd: "xorriso -osirrox on -indev {{ iso.dest }} -extract / {{ role_path }}/files/data/os"
    creates: "{{ role_path }}/files/data/os/.treeinfo"

- name: Generate dnsmasq config
  ansible.builtin.template:
    src: dnsmasq.conf.j2
    dest: "{{ role_path }}/files/data/pxe-config/dnsmasq.conf"
    mode: 0644

- name: Download ipxe efi
  ansible.builtin.get_url:
    url: "{{ ipxe_url }}"
    dest: "{{ role_path }}/files/data/pxe-config/ipxe.efi"
    mode: 0644
    timeout: 60

- name: Generate Ipxe config
  ansible.builtin.template:
    src: boot.ipxe.j2
    dest: "{{ role_path }}/files/data/init-config/boot.ipxe"
    mode: 0644

- name: Generate init config for each machine
  ansible.builtin.template:
    src: kickstart.ks.j2
    dest: "{{ role_path }}/files/data/init-config/{{ hostvars[item]['mac'] }}.ks"
    mode: 0644
  loop: "{{ groups['metal'] }}"

- name: Start the ephemeral PXE server
  community.docker.docker_compose:
    project_src: "{{ role_path }}/files"
    state: present
    restarted: true
    build: true
