home-assistant:
  hostNetwork: true
  image:
    repository: ghcr.io/home-assistant/home-assistant
    tag: 2023.7.3
  env:
    TZ: "GMT-3"
  ingress:
    main:
      enabled: true
      hosts:
        - host: homeassistant.comboio.party
          paths:
            - path: /
      ingressClassName: nginx-public
  
  persistence:
    config:
      enabled: true
  
  addons:
    # -- Enable and configure codeserver for the chart.
    #    This allows for easy access to configuration.yaml
    # @default -- See values.yaml
    codeserver:
      enabled: true
      args:
        - --auth
        - none
        - --user-data-dir
        - /data/config/.vscode
      volumeMounts:
      - name: config
        mountPath: /data/config
      ingress:
        enabled: true
        tls:
          - hosts:
              - hacode.int.comboio.party
            secretName: hacode-tls
        hosts:
          - host: hacode.int.comboio.party
            paths:
              - path: /
        annotations:
          kubernetes.io/ingress.class: nginx-public
          cert-manager.io/cluster-issuer: letsencrypt-dns

  postgresql:
    enabled: true
    global:
      postgresql:
        ## @param global.postgresql.auth.postgresPassword Password for the "postgres" admin user (overrides `auth.postgresPassword`)
        ## @param global.postgresql.auth.username Name for a custom user to create (overrides `auth.username`)
        ## @param global.postgresql.auth.password Password for the custom user to create (overrides `auth.password`)
        ## @param global.postgresql.auth.database Name for a custom database to create (overrides `auth.database`)
        ## @param global.postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials (overrides `auth.existingSecret`).
        ## @param global.postgresql.auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.adminPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
        ## @param global.postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.userPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
        ## @param global.postgresql.auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.replicationPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
        ##
        auth:
          existingSecret: database-password
          secretKeys:
            adminPasswordKey: admin-password
            userPasswordKey: user-password
            replicationPasswordKey: replication-password

mosquitto:
  image:
    repository: eclipse-mosquitto
    tag: 2.0.15
  env:
    TZ: "GMT-3"

esphome:
  hostNetwork: true
  image:
    repository: ghcr.io/libretiny-eu/libretiny-esphome-docker
    tag: "2023.9.0-dev"
  env:
    TZ: "GMT-3"
  persistence:
    data:
      enabled: true
      mountPath: /config
      type: pvc
      accessMode: ReadWriteOnce
      size: 1Gi
  ingress:
    main:
      enabled: true
      tls:
        - hosts:
            - esphome.int.comboio.party
          secretName: esphome-tls
      hosts:
        - host: esphome.int.comboio.party
          paths:
            - path: /
      annotations:
        kubernetes.io/ingress.class: nginx-public
        cert-manager.io/cluster-issuer: letsencrypt-dns

zigbee2mqtt:
  image:
    repository: koenkk/zigbee2mqtt
    tag: 1.32.1
  env:
    TZ: "GMT-3"

  securityContext:
  # -- (bool) Privileged securityContext may be required if USB controller is accessed directly through the host machine
    privileged: true


  additionalVolumeMounts:
    - name: usb
      mountPath: /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_26ad562d1c12ec11a4e821c7bd930c07-if00-port0

  additionalVolumes:
    - name: usb
      hostPath:
        path: /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_26ad562d1c12ec11a4e821c7bd930c07-if00-port0

  persistence:
    data:
      enabled: true
      mountPath: /data
      type: pvc
      accessMode: ReadWriteOnce
      size: 1Gi
    usb:
      enabled: true
      type: hostPath
      hostPath: /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_26ad562d1c12ec11a4e821c7bd930c07-if00-port0
  config:
    # These will be applied ONLY on first run
    # Home Assistant integration (MQTT discovery)
    homeassistant: true

    # allow new devices to join
    # WARNING: Disable this after all devices have been paired! (default: false)
    # Note: this will be controllable in the UI
    permit_join: true

    # MQTT settings
    mqtt:
      # MQTT base topic for zigbee2mqtt MQTT messages
      base_topic: zigbee2mqtt
      # MQTT server URL
      server: "mqtt://homeassistant-mosquitto"
      # Optional: Include device information to mqtt messages (default: false)
      include_device_information: false

    # USB / Serial settings
    serial:
      # Location of your zigbee device
      port: /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_26ad562d1c12ec11a4e821c7bd930c07-if00-port0

      # Optional: adapter type, not needed unless you are experiencing problems (options: zstack, deconz)
      # adapter: deconz

    advanced:
      network_key: GENERATE
      log_output:
        - console
      log_level: info

      # Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)
      # default: 11
      # channel: 11

      # Optional: Baudrate for serial port (default: 115200 for Z-Stack, 38400 for Deconz)
      # baudrate: 38400

      # Optional: RTS / CTS Hardware Flow Control for serial port (default: false)
      # rtscts: true

      # Optional: Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message
      # possible values are: disable (default), ISO_8601, ISO_8601_local, epoch (default: disable)
      last_seen: 'ISO_8601'

      homeassistant_discovery_topic: 'homeassistant'
      homeassistant_status_topic: 'homeassistant/status'
  ingress:
    main:
      enabled: true
      tls:
        - hosts:
            - zigbee.int.comboio.party
          secretName: zigbee-tls
      hosts:
        - host: zigbee.int.comboio.party
          paths:
            - path: /
      annotations:
        kubernetes.io/ingress.class: nginx-public
        cert-manager.io/cluster-issuer: letsencrypt-dns


      # Optional: Enables report feature (see information -> report for more details) (default: false)
      # report: true

      # Optional: Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg (default: false)
      # elapsed: true